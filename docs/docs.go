// Package docs GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import (
	"bytes"
	"encoding/json"
	"strings"
	"text/template"

	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/stream/init_session": {
            "post": {
                "description": "Init session send offer session to WebRTC",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "stream"
                ],
                "summary": "Init session stream",
                "parameters": [
                    {
                        "description": "Body Request",
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/models.InitSessionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseSwag"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.InitSessionRequest": {
            "type": "object",
            "required": [
                "offer_session",
                "room_id",
                "user_id"
            ],
            "properties": {
                "offer_session": {
                    "type": "string",
                    "example": "nmhbf93y21592r3fhjgoewhgveb28356932kffkl"
                },
                "room_id": {
                    "type": "string",
                    "example": "9918"
                },
                "user_id": {
                    "type": "string",
                    "example": "adhon.rizky@gmail.com"
                }
            }
        },
        "models.ResponseSwag": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "example": "00"
                },
                "data": {
                    "$ref": "#/definitions/models.ResponseSwagInitSess"
                },
                "message": {
                    "type": "string",
                    "example": "Successfully init session and get answer session"
                },
                "response_id": {
                    "type": "string",
                    "example": "00"
                }
            }
        },
        "models.ResponseSwagInitSess": {
            "type": "object",
            "properties": {
                "answer_session": {
                    "type": "string",
                    "example": "eyJ0eXBlIjoiYW5zd2VyIiwic2RwIjoidj0wXHJcbm89LSA5MjEyODI0Njg1ODE0MzEwMDA2IDE2MzkxMjc0MjkgSU4gSVA0IDAuMC4wLjBcclxucz0tXHJcbnQ9MCAwXHJcbmE9ZmluZ2VycHJpbnQ6c2hhLTI1NiA1MjpGRjpCMzo4RTo3NDpEMzo4OTpEODowRDoxNTozOTpBRTo5MzpEMDpBODpDRDoyNjpBNzo5NDo2Rjo4RjozRTpFMjoyQTo1NzpDRTo1MDo3RjpCQToxRTpDQzo1QVxyXG5hPWdyb3VwOkJVTkRMRSAwIDFcclxubT1hdWRpbyA5IFVEUC9UTFMvUlRQL1NBVlBGIDExMVxyXG5jPUlOIElQNCAwLjAuMC4wXHJcbmE9c2V0dXA6YWN0aXZlXHJcbmE9bWlkOjBcclxuYT1pY2UtdWZyYWc6aGhzcW9Ub2dUT1p4cWtHQlxyXG5hPWljZS1wd2Q6dVRhdkxVWUZSbU1XVVRuZmNmTGl6QkhJTk5HZENqSGhcclxuYT1ydGNwLW11eFxyXG5hPXJ0Y3AtcnNpemVcclxuYT1ydHBtYXA6MTExIG9wdXMvNDgwMDAvMlxyXG5hPWZtdHA6MTExIG1pbnB0aW1lPTEwO3VzZWluYmFuZGZlYz0xXHJcbmE9cnRjcC1mYjoxMTEgdHJhbnNwb3J0LWNjIFxyXG5hPWV4dG1hcDozIGh0dHA6Ly93d3cuaWV0Zi5vcmcvaWQvZHJhZnQtaG9sbWVyLXJtY2F0LXRyYW5zcG9ydC13aWRlLWNjLWV4dGVuc2lvbnMtMDFcclxuYT1zc3JjOjEzNDc5MDk5NTAgY25hbWU6T0tJSGNtWXp2U09vYkltZ1xyXG5hPXNzcmM6MTM0NzkwOTk1MCBtc2lkOk9LSUhjbVl6dlNPb2JJbWcgbFlGWE5aWVZJcFJYUm9NcFxyXG5hPXNzcmM6MTM0NzkwOTk1MCBtc2xhYmVsOk9LSUhjbVl6dlNPb2JJbWdcclxuYT1zc3JjOjEzNDc5MDk5NTAgbGFiZWw6bFlGWE5aWVZJcFJYUm9NcFxyXG5hPW1zaWQ6T0tJSGNtWXp2U09vYkltZyBsWUZYTlpZVklwUlhSb01wXHJcbmE9c2VuZHJlY3ZcclxuYT1jYW5kaWRhdGU6MzMzNDAxODczMiAxIHVkcCAyMTMwNzA2NDMxIDEwLjE4NC4wLjIgMzc4NTcgdHlwIGhvc3RcclxuYT1jYW5kaWRhdGU6MzMzNDAxODczMiAyIHVkcCAyMTMwNzA2NDMxIDEwLjE4NC4wLjIgMzc4NTcgdHlwIGhvc3RcclxuYT1jYW5kaWRhdGU6MjY1MjAxNDM0MiAxIHVkcCAxNjk0NDk4ODE1IDM1LjIxOS40NC41NSA0NDI1OCB0eXAgc3JmbHggcmFkZHIgMC4wLjAuMCBycG9ydCA0NDI1OFxyXG5hPWNhbmRpZGF0ZToyNjUyMDE0MzQyIDIgdWRwIDE2OTQ0OTg4MTUgMzUuMjE5LjQ0LjU1IDQ0MjU4IHR5cCBzcmZseCByYWRkciAwLjAuMC4wIHJwb3J0IDQ0MjU4XHJcbmE9ZW5kLW9mLWNhbmRpZGF0ZXNcclxubT12aWRlbyA5IFVEUC9UTFMvUlRQL1NBVlBGIDEwMFxyXG5jPUlOIElQNCAwLjAuMC4wXHJcbmE9c2V0dXA6YWN0aXZlXHJcbmE9bWlkOjFcclxuYT1pY2UtdWZyYWc6aGhzcW9Ub2dUT1p4cWtHQlxyXG5hPWljZS1wd2Q6dVRhdkxVWUZSbU1XVVRuZmNmTGl6QkhJTk5HZENqSGhcclxuYT1ydGNwLW11eFxyXG5hPXJ0Y3AtcnNpemVcclxuYT1ydHBtYXA6MTAwIFZQOC85MDAwMFxyXG5hPXJ0Y3AtZmI6MTAwIGdvb2ctcmVtYiBcclxuYT1ydGNwLWZiOjEwMCB0cmFuc3BvcnQtY2MgXHJcbmE9cnRjcC1mYjoxMDAgY2NtIGZpclxyXG5hPXJ0Y3AtZmI6MTAwIG5hY2sgXHJcbmE9cnRjcC1mYjoxMDAgbmFjayBwbGlcclxuYT1leHRtYXA6MyBodHRwOi8vd3d3LmlldGYub3JnL2lkL2RyYWZ0LWhvbG1lci1ybWNhdC10cmFuc3BvcnQtd2lkZS1jYy1leHRlbnNpb25zLTAxXHJcbmE9c3NyYzo3ODc3OTc2MjAgY25hbWU6ZFZoeHZEcUlzdXRGR0FsclxyXG5hPXNzcmM6Nzg3Nzk3NjIwIG1zaWQ6ZFZoeHZEcUlzdXRGR0FsciBKRWVoVk5NVk1xVWpXdldQXHJcbmE9c3NyYzo3ODc3OTc2MjAgbXNsYWJlbDpkVmh4dkRxSXN1dEZHQWxyXHJcbmE9c3NyYzo3ODc3OTc2MjAgbGFiZWw6SkVlaFZOTVZNcVVqV3ZXUFxyXG5hPW1zaWQ6ZFZoeHZEcUlzdXRGR0FsciBKRWVoVk5NVk1xVWpXdldQXHJcbmE9c2VuZHJlY3ZcclxuIn0="
                },
                "pid": {
                    "type": "string",
                    "example": "19681"
                },
                "port_audio": {
                    "type": "string",
                    "example": "51361"
                },
                "port_video": {
                    "type": "string",
                    "example": "56827"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "api.inlive.app",
	BasePath:    "/v1",
	Schemes:     []string{},
	Title:       "Livestream API",
	Description: "Livestream API enable you to live stream.",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
		"escape": func(v interface{}) string {
			// escape tabs
			str := strings.Replace(v.(string), "\t", "\\t", -1)
			// replace " with \", and if that results in \\", replace that with \\\"
			str = strings.Replace(str, "\"", "\\\"", -1)
			return strings.Replace(str, "\\\\\"", "\\\\\\\"", -1)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register("swagger", &s{})
}
